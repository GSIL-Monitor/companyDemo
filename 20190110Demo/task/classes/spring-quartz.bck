<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 

xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	<description>Quartz的本地Cron式执行任务配置</description>
	
	<!--自主彩种开奖配置-->
	<import resource="/df_lottery/df_lottery_number_task.xml"/>
	<import resource="/df_lottery/df_lottery_genIssue_task.xml"/>
	<import resource="/report/report_task.xml"/>
	<!--试玩账户期限检查-->
	<import resource="/testAccount/test_account_task.xml"/>
	<!-- footbar服务体验 -->
	<import resource="/footbar/foot_bar_task.xml"/>
	
	
	<!-- Quartz本地Schduler -->
	<bean id="clusterQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="onlineMemberCountTrigger"/>
				<ref bean="reportTrigger" />
				<ref bean="reportHourTrigger" />
				<ref bean="agentReportTrigger" />
				<ref bean="agentReportHourTrigger" />
				<ref bean="reportFailLogTrigger" />
				<ref bean="profitReportTrigger" />	
				<ref bean="noClearTrigger" />
				<ref bean="runPrivilegeTrigger" />
				<ref bean="totalOverviewTrigger" />
				<ref bean="getJLFFCNumberTrigger"/>
				<ref bean="getTSFFCNumberTrigger"/>
 				<ref bean="clearJLFFCTrigger"/>
				<ref bean="clearTSFFCTrigger"/>	
				<ref bean="getTFFFCNumberTrigger"/>
				<ref bean="clearTFFFCTrigger"/>	
				<ref bean="AUFFCGenIssueTrigger"/>	
				<ref bean="AUKL8GenIssueTrigger"/>	
				<ref bean="getJLPK10NumberTrigger"/>
				<ref bean="getTSPK10NumberTrigger"/>
				<ref bean="clearJLPK10Trigger"/>
				<ref bean="clearTSPK10Trigger"/>	
				<ref bean="getTFPK10NumberTrigger"/>
				<ref bean="clearTFPK10Trigger"/>
				<ref bean="CAFFCGenIssueTrigger"/>	
				<ref bean="CAKL8GenIssueTrigger"/>
				<ref bean="deviceTotalReportTrigger"/>		
				<ref bean="cpreportTrigger"/>		
				<ref bean="totalViewReportTrigger"/>
				<ref bean="getOG1K3NumberTrigger"/>		
				<ref bean="clearOG1K3Trigger"/>	
				<ref bean="getCF1K3NumberTrigger"/>		
				<ref bean="clearCF1K3Trigger"/>					
				<ref bean="footBarTrigger"/>
				<ref bean="profitLossTrigger"/>	
				<ref bean="testAccountCheckTrigger"/>
				<ref bean="firstDepositReporTrigger"/>	
				<ref bean="levelReportTrigger"/>	
			    <ref bean="memberReportTrigger"/>	
			    <ref bean="totalDrawDepositTrigger"/>
				<ref bean="autoResetPauseStatusTrigger"/>
				<ref bean="appSlowReqTrigger"/>
				<ref bean="reOpenAwardForGameResultTrigger"/> 
			    <ref bean="reOpenAwardForNoClearRecordTrigger"/>
				<ref bean="updateRebateMoneyTrigger"/> 
				<ref bean="ProfitLossEfficientTrigger"/>
				<ref bean="getOG1LHCNumberTrigger"/>	
				<ref bean="clearOG1LHCTrigger"/>	
			    <ref bean="getOG3LHCNumberTrigger"/>	
			    <ref bean="clearOG3LHCTrigger"/>
			    <ref bean="getOG5LHCNumberTrigger"/>	
			    <ref bean="clearOG5LHCTrigger"/>
			</list>
		</property>
		
		<!-- quartz配置文件路徑, 指向cluster配置 -->
		<property name="configLocation" value="classpath:quartz.properties" />	
		<!-- 保存Job數據到數據庫所需的數據源 -->
        <property name="dataSource" ref="dataSource" />
       
        <!-- 修改job時，更新到數據ㄎ庫 -->
        <property name="overwriteExistingJobs" value="true" />
	
		<!-- Quartz配置, 本地运行无需单独的quartz.properties文件，在此简单配置即可 -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		</property>
		<!-- 启动时延期2秒开始任务 -->
		<property name="startupDelay" value="2" />
	</bean>

	<!-- 报表汇总 -->
	<bean id="reportTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="reportDetail" />
		<!-- 每天五点运行一次 -->
		<property name="cronExpression" value="0 0 5 * * ?" />
	</bean>
	<!-- 损益报表汇总 -->
	<bean id="profitReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="profitReportDetail" />
		<!-- 每天3点运行一次 -->
		<property name="cronExpression" value="0 0 3 * * ?" />
	</bean>
	
	<bean id="reportDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="totalReport" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />		
	</bean>
	
	<bean id="profitReportDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="winnerPeriod" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />		
	</bean>
	
	<!-- 报表汇总 -->
	<bean id="reportHourTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="reportHourDetail" />
		<!-- 每天两点运行一次 -->
		<property name="cronExpression" value="0 0/20 * * * ?" />
	</bean>
	<bean id="reportHourDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="hourTotalReport" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 报表汇总 END -->
	
	<!-- 出入款总账汇总 -->
	<bean id="totalDrawDepositTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="totalDrawDepositDetail" />
		<!-- 每天两点运行一次 -->
		<property name="cronExpression" value="0 0 10 * * ?" />
	</bean>
	<bean id="totalDrawDepositDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="totalDrawDepositAmount" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 出入款总账 END -->
	
	
	
	
	<!-- 支付设定自动恢复 -->
	<bean id="autoResetPauseStatusTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="autoResetPauseStatusDetail" />
		<!-- 每天两0点运行一次 -->
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean>
	<bean id="autoResetPauseStatusDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="runResetPauseStatusBusiness" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 支付设定自动恢复  END -->
	
	<!-- 未结算汇总 -->
	<bean id="noClearTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="noClearTimerJobDetail" />
		<!-- 每次执行间隔半分钟 -->
		<property name="repeatInterval" value="30000" />
	</bean>
	<bean id="noClearTimerJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<!--<property name="name" value="noClear"/>
		<property name="targetObject" ref="totalScanner" />
		<property name="targetMethod" value="totalNoClearRecord" />  -->
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="name" value="noClear" />
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="totalNoClearRecord" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 未结算汇总 END -->
	
	<!-- 优惠活动 -->
	<bean id="runPrivilegeTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="runPrivilegeTimerJobDetail" />
		<!-- 每次执行间隔1分钟 -->
		<property name="repeatInterval" value="60000" />
	</bean>
	<bean id="runPrivilegeTimerJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="runPrivilege" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 优惠活动 END -->
	
	<!-- 即时注单缓存 -->
	<bean id="totalOverviewTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="totalOverviewTimerJobDetail" />
		<!-- 每次执行间隔1分钟 -->
		<property name="repeatInterval" value="15000" />
	</bean>
	<bean id="totalOverviewTimerJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="totalScanner" />
				<entry key="targetMethod" value="totalOverview" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 即时注单缓存 END -->
	
	<!-- 代理报表每日汇总 -->
	<bean id="agentReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="agnetReportDetail" />
		<!-- 每天五点运行一次 -->
		<property name="cronExpression" value="0 5 0 * * ?" />
	</bean>
	<bean id="agnetReportDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="agentReportTask" />
				<entry key="targetMethod" value="agentReport" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 代理报表每日汇总END -->
	
	<!-- 代理报表每時汇总 -->
	<bean id="agentReportHourTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="agnetReportHourDetail" />
		<property name="cronExpression" value="0 0/5 * * * ?" />
	</bean>
	<bean id="agnetReportHourDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="agentReportTask" />
				<entry key="targetMethod" value="excute" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 代理报表每時汇总END -->
	
	<!-- 报表异常时重产-->
	<bean id="reportFailLogTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="reportFailLogDetail" />
		<property name="cronExpression" value="0 0/5 * * * ?" />
	</bean>
	<bean id="reportFailLogDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="reportFailLogTask" />
				<entry key="targetMethod" value="excute" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	<!-- 报表异常时重产END -->	
	
	<!-- 整理 APP_SLOWREQ_KEY -->
	<bean id="appSlowReqTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="appSlowReqDetail" />
		<property name="cronExpression" value="0/30 * * * * ?" />
	</bean>
	<bean id="appSlowReqDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="appSlowReqTask" />
				<entry key="targetMethod" value="excute" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	
	<!-- 整期有獎號但未結算重新開獎-->
	<bean id="reOpenAwardForGameResultTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="reOpenAwardForGameResultDetail" />
		<property name="cronExpression" value="0/30 * * * * ?" />
	</bean>
	<bean id="reOpenAwardForGameResultDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="reOpenAwardTask" />
				<entry key="targetMethod" value="excute" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	
	<!-- 已結算但有未開獎註單重新開獎-->
	<bean id="reOpenAwardForNoClearRecordTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="reOpenAwardForNoClearRecordDetail" />
		<property name="cronExpression" value="0/30 * * * * ?" />
	</bean>
	<bean id="reOpenAwardForNoClearRecordDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="reOpenAwardTask" />
				<entry key="targetMethod" value="excuteNoOpenRecord" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	
		<!-- 結算後注單給上級返點金額-->
	<bean id="updateRebateMoneyTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="updateRebateMoneyDetail" />
		<property name="cronExpression" value="0 0/3 * * * ?" />
	</bean>
	<bean id="updateRebateMoneyDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="updateRebateMoneyTask" />
				<entry key="targetMethod" value="excute" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />	
	</bean>
	
	<!-- 杀率更改效率排程 -->
	<bean id="ProfitLossEfficientTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="ProfitLossEfficient" />
		<property name="cronExpression" value="57 * * * * ?" />
	</bean>
	<bean id="ProfitLossEfficient" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass">
		  <!-- 上面的任务代理类 -->
			<value>com.lgame.app.task.config.MethodInvokingJobDetailFactoryBean</value>
		</property>
		<property name="jobDataAsMap">
			<map>
				<entry key="targetObject" value="profitLossEfficientTask" />
				<entry key="targetMethod" value="excute" />
			</map>
		</property>
		<!-- durability 表示任務完成之後是否依然保留到數據庫，默認false   -->
		<property name="durability" value="true" />		
	</bean>
	
</beans>
